on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

permissions: read-all

concurrency: "e2e.delegator-generic.workflow_dispatch.branch1.default.slsa3"

env:
  GH_TOKEN: ${{ secrets.E2E_GENERIC_TOKEN }}
  ISSUE_REPOSITORY: slsa-framework/slsa-github-generator

jobs:
  # Dispatch
  ################################################################################
  dispatch:
    runs-on: ubuntu-latest
    # NOTE: workflows are only scheduled on the main branch.
    if: github.event_name == 'schedule'
    permissions:
      actions: write
      contents: write
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - run: ./.github/workflows/scripts/e2e-dispatch.sh

  if-dispatch-failed:
    runs-on: ubuntu-latest
    needs: [dispatch]
    if: always() && github.event_name == 'schedule' && needs.dispatch.result != 'success'
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - run: ./.github/workflows/scripts/e2e-report-failure.sh

  # Main workflow
  ################################################################################
  build:
    if: github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write # For signing
      contents: write # For asset uploads
      packages: write # To write to github packages
      actions: read
    uses: slsa-framework/example-trw/.github/workflows/builder_high-perms_slsa3.yml@v3.0.0
    with:
      artifact: my-artifact
      content: "hello world delegator_generic_slsa3"
    secrets:
      # NOTE: this password is set to 'delegator-password'.
      password: ${{ secrets.DELEGATOR_PASSWORD }}

  verify:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: actions/download-artifact@e9ef242655d12993efdcda9058dee2db83a2cb9b
        with:
          name: "${{ needs.build.outputs.artifact }}" # NOTE: This is 'my-artifact'.
      - uses: slsa-framework/example-trw/high-perms/actions/download/attestation@v3.0.0
        with:
          name: "${{ needs.build.outputs.provenance-download-name }}"
          sha256: "${{ needs.build.outputs.provenance-download-sha256 }}"
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version: "1.18"
      - env:
          BINARY: "${{ needs.build.outputs.artifact }}"
          PROVENANCE: "${{ needs.build.outputs.provenance-download-name }}/${{ needs.build.outputs.artifact }}.build.slsa" # This is defined by the builder.
          BUILDER_ID: "https://github.com/slsa-framework/example-trw/.github/workflows/builder_high-perms_slsa3.yml@v0.0.1"
        run: ./.github/workflows/scripts/e2e.delegator.default.verify.sh

  if-succeeded:
    runs-on: ubuntu-latest
    needs: [build, verify]
    if: github.event_name == 'workflow_dispatch' && needs.build.result == 'success' && needs.verify.result == 'success'
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - run: ./.github/workflows/scripts/e2e-report-success.sh

  if-failed:
    runs-on: ubuntu-latest
    needs: [build, verify]
    if: always() && github.event_name == 'workflow_dispatch' && (needs.build.result == 'failure' || needs.verify.result == 'failure')
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - run: ./.github/workflows/scripts/e2e-report-failure.sh
